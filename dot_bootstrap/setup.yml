---
- name: Configure host.
  hosts: all

  vars:
    nerd_fonts_version: "v3.1.1"

  tasks:
    - name: Run softwareupdate command
      command: softwareupdate --install-rosetta --agree-to-license
      changed_when: false

    - name: Check if Nerd Fonts are installed
      stat:
        path: "{{ lookup('env', 'HOME') }}/Library/Fonts/JetBrainsMonoNLNerdFont-Bold.ttf"
      register: nerd_fonts_installed
      failed_when: false

    - name: Download Nerd Fonts
      get_url:
        url: "https://github.com/ryanoasis/nerd-fonts/releases/download/{{ nerd_fonts_version }}/JetBrainsMono.zip"
        dest: "/tmp/nerd-fonts.zip"
      when: not nerd_fonts_installed.stat.exists

    - name: Create fonts directory
      command: mkdir -p /tmp/fonts
      when: not nerd_fonts_installed.stat.exists

    - name: Unzip Nerd Fonts
      unarchive:
        src: "/tmp/nerd-fonts.zip"
        dest: "/tmp/fonts"
      when: not nerd_fonts_installed.stat.exists

    - name: Install Nerd Fonts
      copy:
        src: "{{ item }}"
        dest: "{{ lookup('env', 'HOME') }}/Library/Fonts/{{ item | basename }}"
      loop: "{{ lookup('pipe', 'find /tmp/fonts -type f -name \"*.ttf\"').split('\n') }}"
      changed_when: true
      when: not nerd_fonts_installed.stat.exists

    - name: Download Oh My Zsh installation script
      get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/install_ohmyzsh.sh

    - name: Run Oh My Zsh installation script
      command:
        cmd: sh /tmp/install_ohmyzsh.sh --unattended
      register: ohmyzsh_result
      failed_when: "'FAILED' in ohmyzsh_result.stderr"

    - name: Check if zsh-autosuggestions plugin directory exists
      stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
      register: plugin_check

    - name: Clone zsh-autosuggestions plugin if not installed
      git:
        repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
      when: not plugin_check.stat.exists

    - name: Check if zsh-syntax-highlighting plugin directory exists
      stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
      register: plugin_check

    - name: Clone zsh-syntax-highlighting plugin if not installed
      git:
        repo: "https://github.com/zsh-users/zsh-syntax-highlighting"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
      when: not plugin_check.stat.exists

    - name: Check if zsh-autocomplete plugin directory exists
      stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autocomplete"
      register: plugin_check

    - name: Clone zsh-autocomplete plugin if not installed
      git:
        repo: "https://github.com/marlonrichert/zsh-autocomplete"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autocomplete"
      when: not plugin_check.stat.exists

    - name: Check if Homebrew is installed
      stat:
        path: "/opt/homebrew/bin/brew"
      register: brew_check
      failed_when: false
      ignore_errors: true

    - name: Install Homebrew if not installed
      command:
        cmd: "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
      when: not brew_check.stat.exists

    - name: Install Homebrew packages
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      loop: "{{ lookup('file', '~/.local/share/chezmoi/dot_bootstrap/brew_packages').split('\n') }}"
      when: brew_check.stat.exists

    - name: Install Homebrew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ lookup('file', '~/.local/share/chezmoi/dot_bootstrap/brew_cask_packages').split('\n') }}"
      when: brew_check.stat.exists
